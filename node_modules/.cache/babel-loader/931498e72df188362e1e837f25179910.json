{"ast":null,"code":"module.exports = Stream;\nvar Parser = require(\"./WritableStream.js\");\nfunction Stream(options) {\n  Parser.call(this, new Cbs(this), options);\n}\nrequire(\"inherits\")(Stream, Parser);\nStream.prototype.readable = true;\nfunction Cbs(scope) {\n  this.scope = scope;\n}\nvar EVENTS = require(\"../\").EVENTS;\nObject.keys(EVENTS).forEach(function (name) {\n  if (EVENTS[name] === 0) {\n    Cbs.prototype[\"on\" + name] = function () {\n      this.scope.emit(name);\n    };\n  } else if (EVENTS[name] === 1) {\n    Cbs.prototype[\"on\" + name] = function (a) {\n      this.scope.emit(name, a);\n    };\n  } else if (EVENTS[name] === 2) {\n    Cbs.prototype[\"on\" + name] = function (a, b) {\n      this.scope.emit(name, a, b);\n    };\n  } else {\n    throw Error(\"wrong number of arguments!\");\n  }\n});","map":null,"metadata":{},"sourceType":"script"}