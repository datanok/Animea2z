{"ast":null,"code":"var isTag = require(\"domelementtype\").isTag;\nmodule.exports = {\n  filter: filter,\n  find: find,\n  findOneChild: findOneChild,\n  findOne: findOne,\n  existsOne: existsOne,\n  findAll: findAll\n};\nfunction filter(test, element, recurse, limit) {\n  if (!Array.isArray(element)) element = [element];\n  if (typeof limit !== \"number\" || !isFinite(limit)) {\n    limit = Infinity;\n  }\n  return find(test, element, recurse !== false, limit);\n}\nfunction find(test, elems, recurse, limit) {\n  var result = [],\n    childs;\n  for (var i = 0, j = elems.length; i < j; i++) {\n    if (test(elems[i])) {\n      result.push(elems[i]);\n      if (--limit <= 0) break;\n    }\n    childs = elems[i].children;\n    if (recurse && childs && childs.length > 0) {\n      childs = find(test, childs, recurse, limit);\n      result = result.concat(childs);\n      limit -= childs.length;\n      if (limit <= 0) break;\n    }\n  }\n  return result;\n}\nfunction findOneChild(test, elems) {\n  for (var i = 0, l = elems.length; i < l; i++) {\n    if (test(elems[i])) return elems[i];\n  }\n  return null;\n}\nfunction findOne(test, elems) {\n  var elem = null;\n  for (var i = 0, l = elems.length; i < l && !elem; i++) {\n    if (!isTag(elems[i])) {\n      continue;\n    } else if (test(elems[i])) {\n      elem = elems[i];\n    } else if (elems[i].children.length > 0) {\n      elem = findOne(test, elems[i].children);\n    }\n  }\n  return elem;\n}\nfunction existsOne(test, elems) {\n  for (var i = 0, l = elems.length; i < l; i++) {\n    if (isTag(elems[i]) && (test(elems[i]) || elems[i].children.length > 0 && existsOne(test, elems[i].children))) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction findAll(test, rootElems) {\n  var result = [];\n  var stack = rootElems.slice();\n  while (stack.length) {\n    var elem = stack.shift();\n    if (!isTag(elem)) continue;\n    if (elem.children && elem.children.length > 0) {\n      stack.unshift.apply(stack, elem.children);\n    }\n    if (test(elem)) result.push(elem);\n  }\n  return result;\n}","map":null,"metadata":{},"sourceType":"script"}